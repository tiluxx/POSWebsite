@page
@using Models
@model POSWebsite.Pages.HeadQuarter.RevenueStatisticsModel
@{
    ViewData["Title"] = "Revenue Statistics";
}

<div class="card mb-3 d-none d-lg-block">
    <div class="card-body px-4 py-3">
        <form asp-page-handler="ViewSalesReport" method="post">
            <div class="d-flex align-items-center col-12">
                <div class="d-flex align-items-center">
                    <p class="mb-0">Agent's Retail Store:</p>
                    <div class="dropdown border-end">
                        <div class="px-4">
                            <select class="form-select" name="AgentSelection" id="agent-selection">
                                <option value="-1" selected>All Agents</option>
                                @foreach (BranchStore branch in Model.GetBranches())
                                {
                                    <option value="@branch.Id">@branch.BranchName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <p class="ps-4 mb-0">Timeline:</p>
                    <div class="dropdown" id="date-select-group">
                        <div class="input-group px-4">
                            <input class="form-control" type="date" name="FromDate" id="from-date-picker" value="@DateOnly.FromDateTime(DateTime.Now).ToString("yyyy-MM-dd")">
                            <input class="form-control" type="date" name="ToDate" id="to-date-picker" value="@DateOnly.FromDateTime(DateTime.Now.AddDays(16)).ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary rounded-pill text-end">
                        View Revenue
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@if (Model.GetResponseStatus() != null)
{
    <div class="row">
        <div>
            <div class="row">
                <div class="col-sm-6 d-flex align-items-stretch">
                    <div class="card w-100">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title mb-1 fw-semibold">Amounts</h5>
                                    <p class="mb-0">@Model.GetResponseStatus().SalesReport.TypeOfTimeline</p>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1 fw-semibold text-end">@Model.GetResponseStatus().SalesReport.TotalAmount</h5>
                                    <span class="badge rounded-pill bg-light-warning text-warning border-warning border text-end">-3.8%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 d-flex align-items-stretch">
                    <div class="card w-100">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title fw-semibold mb-1">Products</h5>
                                    <p class="mb-0">@Model.GetResponseStatus().SalesReport.TypeOfTimeline</p>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1 fw-semibold text-end">@Model.GetResponseStatus().SalesReport.TotalProducts</h5>
                                    <span class="badge rounded-pill bg-light-success text-success border-success border text-end">+26.5%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 d-flex align-items-stretch">
                    <div class="card w-100">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title mb-1">Orders</h5>
                                    <p class="mb-0">@Model.GetResponseStatus().SalesReport.TypeOfTimeline</p>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1 text-end">@Model.GetResponseStatus().SalesReport.TotalOrders</h5>
                                    <span class="badge rounded-pill bg-light-success text-success border-success border text-end">+26.5%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 d-flex align-items-stretch">
                    <div class="card w-100">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title mb-1">Customers</h5>
                                    <p class="mb-0">@Model.GetResponseStatus().SalesReport.TypeOfTimeline</p>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1 text-end">@Model.GetResponseStatus().SalesReport.TotalCustomers</h5>
                                    <span class="badge rounded-pill bg-light-success text-success border-success border text-end">+26.5%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <div class="card mb-0">
                <div class="card-body">
                    <div class="d-md-flex justify-content-between mb-10">
                        <div class="mb-10 mb-md-0">
                            <h5 class="card-title">Revenue</h5>
                            <p class="card-subtitle mb-0">@Model.GetResponseStatus().SalesReport.TypeOfTimeline</p>
                        </div>
                    </div>
                    @{
                        List<RevenueItem> revenueItems = Model.GetResponseStatus().SalesReport.RevenueItems;
                        for (int i = 0; i < revenueItems.Count; ++i)
                        {
                            <input type="hidden" value="@revenueItems[i].Revenue" id="revenu_@i" />
                            <input type="hidden" value="@revenueItems[i].DateVal.ToString("M")" id="date_@i" />
                        }
                    }
                    <div id="revenueStatistics" class="w-100">
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/lib/apexcharts/dist/apexcharts.min.js"></script>
<script type="text/javascript">
    const data = []
    const categories = []
    let i = 0;
    let revenueInput = document.getElementById('revenu_' + i)
    let dateInput = document.getElementById('date_' + i)
    while (revenueInput != null) {
        data.push(revenueInput.value)
        categories.push(dateInput.value)
        ++i;
        revenueInput = document.getElementById('revenu_' + i)
        dateInput = document.getElementById('date_' + i)
    }
    const revenues = {
        series: [
            {
                name: "",
                data: data
            }
        ],
        chart: {
            fontFamily: "Plus Jakarta Sans', sans-serif",
            foreColor: "#adb0bb",
            height: 260,
            type: "line",
            toolbar: {
                show: false,
            },
            stacked: false
        },
        legend: {
            show: false,
        },
        stroke: {
            width: 3,
            curve: "smooth",
        },
        grid: {
            borderColor: "var(--bs-border-color)",
            xaxis: {
                lines: {
                    show: true
                }
            },
            yaxis: {
                lines: {
                    show: true
                },

            },
            padding: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            },
        },
        colors: ["#0085db"],
        fill: {
            type: "gradient",
            gradient: {
                shade: "dark",
                gradientToColors: ["#6993ff"],
                shadeIntensity: 1,
                type: "horizontal",
                opacityFrom: 1,
                opacityTo: 1,
                stops: [0, 100, 100, 100],
            },
        },
        markers: {
            size: 0,
        },
        xaxis: {
            labels: {
                show: true,
            },
            type: 'category',
            categories: categories,
            axisTicks: {
                show: false,
            },
            axisBorder: {
                show: false,
            },

        },
        yaxis: {
            axisTicks: {
                show: false,
            },
            axisBorder: {
                show: false,
            },
            labels: {
                show: true,
                formatter: function (value) {
                    return "$" + value;
                }
            },
        },
        tooltip: {
            theme: "dark",
        },
    };
    new ApexCharts(document.querySelector("#revenueStatistics"), revenues).render();
</script>